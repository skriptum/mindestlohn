## Imports


```{r}
 
library(stargazer)
library(tidyverse)
library(patchwork)
library(plotly)
```

```{r}
 
load("data/models.RData")
```

```{r}
 
wahl_lohn <- readRDS("data/wahl_lohn_mod.rds")
```

## Plots

Basic plot with SB

```{r}
 
plot_basic <- ggplot(aes(x = lohn_prozent, y = afd_prozent, label=name), data = wahl_lohn) +
  geom_point(shape = 1) +
  geom_smooth(method = "lm", se = T) +
  labs(
    x = "Anteil Mindestlohnbezieher",
    y = "AfD Stimmen in %",
    title = "AfD Stimmen und Mindestlohnbezieher",
    subtitle = "Kreisebene",
    caption = "Daten: WSI, Bundeswahlleiter"
  ) +
  theme_minimal() #+ #scientific theme
  #coord_cartesian(xlim = c(0, 0.5), ylim = c(0, 0.35)) + #start at 0,0
  # for Sonneberg (16072)
  # geom_point(
  #   data = wahl_lohn %>% filter("kreis" == "16072"),
  #   color = "red",
  # ) + 
  # geom_text(
  #   data = wahl_lohn %>% filter("kreis" == "16072"),
  #   label = "SB",
  #   vjust = 1.3,
  #   hjust = 0,
  #   color = "red"
  # )
ggsave("images/plot_basic.png", plot_basic, width = 10, height = 7)
plotly::ggplotly(plot_basic)
```

Plot with east germany

```{r}
 
ggplot(aes(x = lohn_prozent, y = afd_prozent), data = wahl_lohn) +
  geom_point(aes(color = factor(ost))) +
  geom_smooth(method = "lm") +
  labs(
    x = "Anteil Mindestlohnbezieher",
    y = "AfD Stimmen in %",
    title = "AfD Stimmen und Mindestlohnbezieher",
    subtitle = "Kreisebene",
    caption = "Daten: WSI, Bundeswahlleiter"
  ) +
  scale_color_manual(values = c("red", "blue"), name="Osten") + #color of points
  theme_minimal() + #scientific theme
  coord_cartesian(xlim = c(0, 0.5), ylim = c(0, 0.35))  #start at 0,0
```

Plot with scale for arbeitslosenquote

```{r}
 
ggplot(aes(x = lohn_prozent, y = afd_prozent), data = wahl_lohn) +
  geom_point(aes(color = arbeitslosenquote)) +
  geom_smooth(method = "lm") +
  labs(
    x = "Anteil Mindestlohnbezieher",
    y = "AfD Stimmen in %",
    title = "AfD Stimmen und Mindestlohnbezieher",
    subtitle = "Kreisebene",
    caption = "Daten: WSI, Bundeswahlleiter"
  ) +
  scale_color_viridis_c(name = "Arbeitslosenquote", option="magma", direction=-1) + #color of points
  theme_minimal() + #scientific theme
  coord_cartesian(xlim = c(0, 0.5), ylim = c(0, 0.35))  #start at 0,0
```

Plot for linkspartei

```{r}
 
ggplot(aes(x = lohn_prozent, y = linke_prozent), data = wahl_lohn) +
  geom_point() +
  geom_smooth(method = "lm") +
  theme_minimal() #scientific theme
```

## Maps

Load GEOJSON Data for Kreise

Data Source = Regionalatlas Statistikportal

```{r}
 
spdf <- sf::read_sf("data/kreise.geojson")
```

Merge

```{r}
 
geodata <- spdf %>% 
  left_join(wahl_lohn, by = c("schluessel" = "kreis"))
```

Afd Stimmen

```{r}
 
afd_map <- ggplot(geodata) +
  geom_sf(aes(fill = afd_prozent)) +
  scale_fill_viridis_c(name = "AfD in %", option="magma", direction=-1) +
  theme_minimal() +
  labs(
    title = "AfD Vote Share",
    subtitle = "District Level",
    caption = "Data: Bundeswahlleiter"
  )
```

Mindestlohn

```{r}
 
lohn_map <- ggplot(geodata) +
  geom_sf(aes(fill = lohn_prozent)) +
  scale_fill_viridis_c(name = "MW %", option="magma", direction=-1) +
  theme_minimal() +
  labs(
    title = "Minimum Wage Recipients",
    subtitle = "District Level",
    caption = "Data: WSI"
  )
```

both maps next to each other

```{r}
#| cache: true
 
maps <- afd_map + lohn_map
ggsave("images/maps.png",plot=maps, width = 10, height = 5)
```

```{r}
#| cache: true
 
subplot(ggplotly(afd_map), ggplotly(lohn_map))
```

## Regression Models Table

Summary Statistic of Data

```{r}
#| label: tbl-summary
#| output: asis
 
#stargazer(as.data.frame(wahl_lohn), type="text")
stargazer(as.data.frame(wahl_lohn), type="latex", out="images/summary_table.tex", header = FALSE)
```

Compile List of Models to include in Table

```{r}
 
models <- list(
  model_basic,
  model_ost,
  model_arbeit,
  model_gdp,
  model_age,
  model_foreign,
  model_pop
)
```

Create the Stargazer Table

```{r}
#| output: asis
#| label: tbl-results
 
table <- stargazer(models, 
          #type = "text",
          type = "html",
          out="images/table.html", #
          title = "Effect of Minimum Wage Recipients on AfD Vote Share",
          dep.var.labels = "AfD Vote Share",
          covariate.labels = c(
            "Minimum Wage Rate", 
            "East Germany",
            "Unemployment Rate", 
            "Log GDP p. C.", 
            "Avg. Age", 
            "Log Pop. Density", 
            "Foreigners"
            ),
          df = T,
          omit.stat = c("rsq", "f")
          )
```

Rewrite this code with table package gt

